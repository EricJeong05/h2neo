/*
 * opticalSensor.c
 *
 * Methods to
 *
 *  Created on: Jul 14, 2020
 *      Author: Jenny Cho
 */

void ADC_Init() {
	/*
	 * ADC12SHT0_x   -- sample-and-hold time. Defines num ADC12CLK cycles in the sampling period
	 * 						 0b100 --> 64 cycles
	 * ADC12ON       -- ADC12_A on
	 * ADC12MSC      -- set multiple sample and conversion (valid for sequence or repeated modes)
	 * ADC12REFON    -- reference generator ON
	 * ADC12REF2_5V  -- 0b->1.5V, 1b->2.5V (ADC12REFON must be set)
	 */
	REFCTL0 |= REFON;				// enable
	REFCTL0 |= REFVSEL_0;			// 1.5V
//	REFCTL0 |= REFVSEL_1;			// 2.0V
//	REFCTL0 |= REFVSEL_2;			// 2.5V
	REFCTL0 &= ~REFMSTR;  			// Reset REFMSTR to hand over control to ADC12_A ref control registers
	ADC12CTL0 = ADC12ON + ADC12SHT0_8 + ADC12MSC;
	// unused
//	ADC12CTL0 |= ADC12REFON;
//	ADC12CTL0 &= ~ADC12REF2_5V;  	// 0b, ref voltage = 1.5V
//	ADC12CTL0 |= ADC12REF2_5V;  	// 1b, ref voltage = 2.5V


	/*
	 * ADC12SHP      -- sample-and-hold-pulse-mode select (1->SAMPCON sourced from sampling timer)
	 * ADC12CONSEQ_x -- 2->repeat single channel
	 */
	ADC12CTL1 = ADC12SHP+ADC12CONSEQ_2;       // Use sampling timer, set mode
	ADC12IE = 0x01;                           // Enable ADC12IFG.0

	ADC12MCTL0 = ADC12SREF_1;                 // Vr+ = Vref+ and Vr- = AVss
	volatile unsigned int i;
	for (i=0; i<0x30; i++);                  // Delay for reference start-up

	ADC12CTL0 |= ADC12ENC;                    // Enable conversions
	/*
	 * Enable A/D channel A0 (P6.0)
	 * If no ports connect to desired A##, then use ADC12MCTLx register (x == ##)
	 */
	P6SEL |= 0x01;
}
