// Written by Jenny Cho
// Modified from PDC8544.h by Rob

// The functions defined here are written to be used for the Nokia5110 LCD screen,
// interfaced with MSP430F5529 Launchpad.

#include <msp430.h> 

#ifndef NOKIA5110_INCLUDE
#define NOKIA5110_INCLUDE

/********************************************************************************
 *
 * Functions
 *
 *******************************************************************************/
void Clock_Init_1MHz(void);
void SPI_Init(void);
void LCD_Init(void);
char sendByte(unsigned char isData, unsigned char byte);
void setCursor(unsigned char xAddr, unsigned char yAddr);
void clearBank(unsigned char bank);
void clearLCD(void);
void prints(const char *str);
void printc(char c);


/********************************************************************************
 * VCC -- 3.3V power
 * GND -- ground pin
 * SCE -- chip select/enable, active low  (CE)
 * RST -- can reset display, active low
 * D/C -- tells if received data == command or display data
 * DN  -- serial data pin for SPI
 * SCLK - clock pin for SPI
 * LED -- controls backlight LED, PWM can control brightness
 ********************************************************************************/
#define LCD_VCC_PIN					BIT2  // P8.2
#define	LCD_SCE_PIN					BIT6  // P2.6
#define LCD_RST_PIN					BIT7  // P3.7
#define LCD_DC_PIN					BIT1  // P3.1
#define LCD_DN_PIN					BIT0  // P3.0  (SPI MOSI)
#define LCD_SCLK_PIN				BIT2  // P3.2  (UCB0CLK)
#define LCD_LED_PIN					BIT5  // P2.5

#define LCD_SELECT					P2OUT &= ~LCD_SCE_PIN
#define LCD_DESELECT				P2OUT |= LCD_SCE_PIN
#define LCD_SET_COMMAND				P3OUT &= ~LCD_DC_PIN
#define LCD_SET_DATA				P3OUT |= LCD_DC_PIN    // pixel stuff
#define	LCD_COMMAND					0
#define LCD_DATA					1

// p.14 NOKIA5110 datasheet
#define NO_OPERATION				0x00
#define FUNCTION_SET				0x20  // should | with 3 options below
#define POWER_DOWN_CTL				0x4   // 0 chip active, 1 power down mode
#define ENTRY_MODE					0x2   // 0 horizontal, 1 vertical addressing
#define EXTENDED_INSTRUCTION_SET	0x01  // 0 basic instr set, 1 extended instr set

// H = 0
// Usually should be kept at H = 0 to set cursor
#define DISP_CONTROL				0x8   // always | with 4 options below
#define DISP_BLANK					0x0   // 0b000
#define DISP_NORMAL					0x4   // 0b100
#define DISP_ALL					0x1   // 0b001
#define DISP_INVERT					0x5   // 0b101
#define SET_Y_ADDR					0x40  // always | with 3bits
#define SET_X_ADDR					0x80  // always | with 7bits
#define X_PIXELS					84    // X = [0, 83]
#define Y_PIXELS					6     // Y \ [0, 5]
#define MAX_BYTES					504   // X_PIXELS * Y_PIXELS

// H = 1
// Need to put H-->0 if you want to change VOP, TEMP, BIAS
#define SET_VOP						0x80  // always | with 7bits
#define SET_TEMP					0x04  // always | with 2bits
#define SET_BIAS					0x10  // always | with 3bits

#define SPACE_CHAR					0x20  // (space) in symbols table

static const char symbols_table[][5] = { // basic font
		{0x00, 0x00, 0x00, 0x00, 0x00}   // (space)
		,{0x00, 0x00, 0x5F, 0x00, 0x00}  // !
		,{0x00, 0x07, 0x00, 0x07, 0x00}  // "
		,{0x14, 0x7F, 0x14, 0x7F, 0x14}  // #
		,{0x24, 0x2A, 0x7F, 0x2A, 0x12}  // $
		,{0x23, 0x13, 0x08, 0x64, 0x62}  // %
		,{0x36, 0x49, 0x55, 0x22, 0x50}  // &
		,{0x00, 0x05, 0x03, 0x00, 0x00}  // '
		,{0x00, 0x1C, 0x22, 0x41, 0x00}  // (
		,{0x00, 0x41, 0x22, 0x1C, 0x00}  // )
		,{0x08, 0x2A, 0x1C, 0x2A, 0x08}  // *
		,{0x08, 0x08, 0x3E, 0x08, 0x08}  // +
		,{0x00, 0x50, 0x30, 0x00, 0x00}  // ,
		,{0x08, 0x08, 0x08, 0x08, 0x08}  // -
		,{0x00, 0x60, 0x60, 0x00, 0x00}  // .
		,{0x20, 0x10, 0x08, 0x04, 0x02}  // /
		,{0x3E, 0x51, 0x49, 0x45, 0x3E}  // 0
		,{0x00, 0x42, 0x7F, 0x40, 0x00}  // 1
		,{0x42, 0x61, 0x51, 0x49, 0x46}  // 2
		,{0x21, 0x41, 0x45, 0x4B, 0x31}  // 3
		,{0x18, 0x14, 0x12, 0x7F, 0x10}  // 4
		,{0x27, 0x45, 0x45, 0x45, 0x39}  // 5
		,{0x3C, 0x4A, 0x49, 0x49, 0x30}  // 6
		,{0x01, 0x71, 0x09, 0x05, 0x03}  // 7
		,{0x36, 0x49, 0x49, 0x49, 0x36}  // 8
		,{0x06, 0x49, 0x49, 0x29, 0x1E}  // 9
		,{0x00, 0x36, 0x36, 0x00, 0x00}  // :
		,{0x00, 0x56, 0x36, 0x00, 0x00}  // ;
		,{0x00, 0x08, 0x14, 0x22, 0x41}  // <
		,{0x14, 0x14, 0x14, 0x14, 0x14}  // =
		,{0x41, 0x22, 0x14, 0x08, 0x00}  // >
		,{0x02, 0x01, 0x51, 0x09, 0x06}  // ?
		,{0x32, 0x49, 0x79, 0x41, 0x3E}  // @
		,{0x7E, 0x11, 0x11, 0x11, 0x7E}  // A
		,{0x7F, 0x49, 0x49, 0x49, 0x36}  // B
		,{0x3E, 0x41, 0x41, 0x41, 0x22}  // C
		,{0x7F, 0x41, 0x41, 0x22, 0x1C}  // D
		,{0x7F, 0x49, 0x49, 0x49, 0x41}  // E
		,{0x7F, 0x09, 0x09, 0x01, 0x01}  // F
		,{0x3E, 0x41, 0x41, 0x51, 0x32}  // G
		,{0x7F, 0x08, 0x08, 0x08, 0x7F}  // H
		,{0x00, 0x41, 0x7F, 0x41, 0x00}  // I
		,{0x20, 0x40, 0x41, 0x3F, 0x01}  // J
		,{0x7F, 0x08, 0x14, 0x22, 0x41}  // K
		,{0x7F, 0x40, 0x40, 0x40, 0x40}  // L
		,{0x7F, 0x02, 0x04, 0x02, 0x7F}  // M
		,{0x7F, 0x04, 0x08, 0x10, 0x7F}  // N
		,{0x3E, 0x41, 0x41, 0x41, 0x3E}  // O
		,{0x7F, 0x09, 0x09, 0x09, 0x06}  // P
		,{0x3E, 0x41, 0x51, 0x21, 0x5E}  // Q
		,{0x7F, 0x09, 0x19, 0x29, 0x46}  // R
		,{0x46, 0x49, 0x49, 0x49, 0x31}  // S
		,{0x01, 0x01, 0x7F, 0x01, 0x01}  // T
		,{0x3F, 0x40, 0x40, 0x40, 0x3F}  // U
		,{0x1F, 0x20, 0x40, 0x20, 0x1F}  // V
		,{0x7F, 0x20, 0x18, 0x20, 0x7F}  // W
		,{0x63, 0x14, 0x08, 0x14, 0x63}  // X
		,{0x03, 0x04, 0x78, 0x04, 0x03}  // Y
		,{0x61, 0x51, 0x49, 0x45, 0x43}  // Z
		,{0x00, 0x00, 0x7F, 0x41, 0x41}  // [
		,{0x02, 0x04, 0x08, 0x10, 0x20}  // "\"
		,{0x41, 0x41, 0x7F, 0x00, 0x00}  // ]
		,{0x04, 0x02, 0x01, 0x02, 0x04}  // ^
		,{0x40, 0x40, 0x40, 0x40, 0x40}  // _
		,{0x00, 0x01, 0x02, 0x04, 0x00}  // `
		,{0x20, 0x54, 0x54, 0x54, 0x78}  // a
		,{0x7F, 0x48, 0x44, 0x44, 0x38}  // b
		,{0x38, 0x44, 0x44, 0x44, 0x20}  // c
		,{0x38, 0x44, 0x44, 0x48, 0x7F}  // d
		,{0x38, 0x54, 0x54, 0x54, 0x18}  // e
		,{0x08, 0x7E, 0x09, 0x01, 0x02}  // f
		,{0x08, 0x14, 0x54, 0x54, 0x3C}  // g
		,{0x7F, 0x08, 0x04, 0x04, 0x78}  // h
		,{0x00, 0x44, 0x7D, 0x40, 0x00}  // i
		,{0x20, 0x40, 0x44, 0x3D, 0x00}  // j
		,{0x00, 0x7F, 0x10, 0x28, 0x44}  // k
		,{0x00, 0x41, 0x7F, 0x40, 0x00}  // l
		,{0x7C, 0x04, 0x18, 0x04, 0x78}  // m
		,{0x7C, 0x08, 0x04, 0x04, 0x78}  // n
		,{0x38, 0x44, 0x44, 0x44, 0x38}  // o
		,{0x7C, 0x14, 0x14, 0x14, 0x08}  // p
		,{0x08, 0x14, 0x14, 0x18, 0x7C}  // q
		,{0x7C, 0x08, 0x04, 0x04, 0x08}  // r
		,{0x48, 0x54, 0x54, 0x54, 0x20}  // s
		,{0x04, 0x3F, 0x44, 0x40, 0x20}  // t
		,{0x3C, 0x40, 0x40, 0x20, 0x7C}  // u
		,{0x1C, 0x20, 0x40, 0x20, 0x1C}  // v
		,{0x3C, 0x40, 0x30, 0x40, 0x3C}  // w
		,{0x44, 0x28, 0x10, 0x28, 0x44}  // x
		,{0x0C, 0x50, 0x50, 0x50, 0x3C}  // y
		,{0x44, 0x64, 0x54, 0x4C, 0x44}  // z
		,{0x00, 0x08, 0x36, 0x41, 0x00}  // {
		,{0x00, 0x00, 0x7F, 0x00, 0x00}  // |
		,{0x00, 0x41, 0x36, 0x08, 0x00}  // }
		,{0x08, 0x08, 0x2A, 0x1C, 0x08}  // ->
		,{0x08, 0x1C, 0x2A, 0x08, 0x08}  // <-
};

#endif
